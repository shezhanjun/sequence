<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
    		http://www.springframework.org/schema/beans/spring-beans.xsd
       		http://www.springframework.org/schema/context 
     		http://www.springframework.org/schema/context/spring-context.xsd
     		http://www.springframework.org/schema/tx  
			http://www.springframework.org/schema/aop
       		http://www.springframework.org/schema/aop/spring-aop.xsd"
       default-autowire="byName">

    <bean id="abstractDataSource" class="com.alibaba.druid.pool.DruidDataSource"
          abstract="true" init-method="init" destroy-method="close">
        <!-- 初始化连接个数 -->
        <property name="initialSize" value="5" />
        <!-- 最大连接个数 -->
        <property name="maxActive" value="10" />
        <!-- 最小连接个数 -->
        <property name="minIdle" value="2" />
        <!-- 获取连接时最大等待时间，单位毫秒 -->
        <property name="maxWait" value="60000" />
        <!-- 是否缓存preparedStatement，Mysql下建议关闭-->
        <property name="poolPreparedStatements" value="false" />
        <property name="maxOpenPreparedStatements" value="-1" />
        <!-- 检测是否有效的sql，如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用 -->
        <property name="validationQuery" value="SELECT 'x'" />
        <!-- 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能 -->
        <property name="testOnBorrow" value="false" />
        <!-- 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能 -->
        <property name="testOnReturn" value="false" />
        <!-- 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，
               执行validationQuery检测连接是否有效。 -->
        <property name="testWhileIdle" value="true" />
        <!-- 单位：毫秒，有两个含义：
           1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接
           2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 连接保持空闲而不被驱逐的最长时间，单位：毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <!-- 开启Druid的监控统计功能 -->
        <property name="filters" value="stat" />
    </bean>

    <bean id="sequenceDataSource_00" parent="abstractDataSource">
        <property name="url" value="jdbc:mysql://10.10.40.120:3306/global_sequence_00?useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull" />
        <property name="username" value="root" />
        <property name="password" value="admin" />
    </bean>

    <bean id="sequenceDataSource_01" parent="abstractDataSource">
        <property name="url" value="jdbc:mysql://10.10.40.120:3306/global_sequence_01?useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull" />
        <property name="username" value="root" />
        <property name="password" value="admin" />
    </bean>

    <bean id="sequenceDataSource_02" parent="abstractDataSource">
        <property name="url" value="jdbc:mysql://127.0.0.1:3306/global_sequence_00?useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull" />
        <property name="username" value="root" />
        <property name="password" value="admin" />
    </bean>

    <bean id="sequenceDataSource_03" parent="abstractDataSource">
        <property name="url" value="jdbc:mysql://127.0.0.1:3306/global_sequence_01?useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull" />
        <property name="username" value="root" />
        <property name="password" value="admin" />
    </bean>

	<!-- 全局Sequence -->
	<bean id="sequence" class="com.tstd2.client.sequence.impl.DefaultGlobalSequence" init-method="init">
		<!-- 步长 -->
		<property name="capacity" value="100" />

        <property name="dataSourceManagerFactory">
            <bean class="com.tstd2.client.sequence.routing.DataSourceManagerFactory">
                <!-- 连接池 -->
                <property name="dataSourceList">
                    <list>
                        <ref bean="sequenceDataSource_00"></ref>
                        <ref bean="sequenceDataSource_01"></ref>
                        <ref bean="sequenceDataSource_02"></ref>
                        <ref bean="sequenceDataSource_03"></ref>
                    </list>
                </property>
            </bean>
        </property>
		<!-- DAO -->
		<property name="sequenceDao" >
			<bean class="com.tstd2.client.sequence.dao.DefaultGlobalSequenceDao" />
		</property>
	</bean>


	<!-- 按日在增长Sequence -->
	<bean id="dayByDaySequence" class="com.tstd2.client.sequence.impl.DefaultDayByDaySequence" init-method="init" >
		<!-- 步长 -->
		<property name="capacity" value="100" />

        <property name="dataSourceManagerFactory">
            <bean class="com.tstd2.client.sequence.routing.DataSourceManagerFactory">
                <!-- 连接池 -->
                <property name="dataSourceList">
                    <list>
                        <ref bean="sequenceDataSource_00"></ref>
                        <ref bean="sequenceDataSource_01"></ref>
                        <ref bean="sequenceDataSource_02"></ref>
                        <ref bean="sequenceDataSource_03"></ref>
                    </list>
                </property>
            </bean>
        </property>

		<!-- DAO -->
		<property name="sequenceDao" >
			<bean class="com.tstd2.client.sequence.dao.DefaultDayByDaySequenceDao" />
		</property>
	</bean>

</beans>
